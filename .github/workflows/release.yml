name: build-static

on:
  push:
    paths:
      - "Dockerfile"
      - ".github/workflows/release.yml"
    branches:
      - main
  pull_request:
    paths:
      - "Dockerfile"
      - ".github/workflows/release.yml"
  workflow_dispatch:

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build . \
              --platform linux/${{ matrix.arch }} \
              --target local \
              --output type=tar,dest=buildah-${{ matrix.arch }}.tar; \
          gzip buildah-${{ matrix.arch }}.tar

      - name: Store tarball
        uses: actions/upload-artifact@v4
        with:
          name: buildah-${{ matrix.arch }}.tar.gz
          path: buildah-${{ matrix.arch }}.tar.gz

  release:
    if: always() && github.event_name != 'pull_request'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v5

      - name: Get version
        id: get_version
        run: |
          version="$(cat Dockerfile | grep "ARG BUILDAH_VERSION=" | sed -E 's/ARG BUILDAH_VERSION=//')"
          echo "::set-output name=version::${version}"

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: "buildah ${{ steps.get_version.outputs.version }}"
          tag: v${{ steps.get_version.outputs.version }}
          draft: false
          omitBody: true
          artifacts: "*/buildah-*.tar.gz"
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
